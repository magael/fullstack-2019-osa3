{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","response","data","newObject","post","id","put","concat","delete","RemoveButton","props","person","persons","setPersons","setNotificationMessage","newPersons","filter","p","name","react_default","a","createElement","onClick","window","confirm","personService","setTimeout","Persons","filteredPersons","toLowerCase","includes","map","App_Person","key","Person","number","App_RemoveButton","Filter","value","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","_ref","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","className","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","newFilter","setNewFilter","_useState9","_useState10","notificationMessage","useEffect","initialPersons","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","names","nameObject","find","returnedPerson","updatePerson","App_Persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.093a9bd3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// const baseUrl = \"http://localhost:3001/api/persons\";\r\nconst baseUrl = \"https://aqueous-escarpment.herokuapp.com/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport personService from \"./services/persons\";\r\n\r\nconst RemoveButton = props => {\r\n  const { person, persons, setPersons, setNotificationMessage } = props;\r\n  const newPersons = persons.filter(p => p.name !== person.name);\r\n\r\n  const popup = () => {\r\n    if (window.confirm(`Poistetaanko ${person.name}`)) {\r\n      personService.remove(person.id);\r\n      setPersons(newPersons);\r\n      setNotificationMessage(`${person.name} poistettu`);\r\n      setTimeout(() => {\r\n        setNotificationMessage(null);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return <button onClick={popup}>poista</button>;\r\n};\r\n\r\nconst Persons = props => {\r\n  const { persons, filter, setPersons, setNotificationMessage } = props;\r\n  const filteredPersons = persons.filter(person =>\r\n    person.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {filteredPersons.map(person => (\r\n        <Person\r\n          key={person.name}\r\n          person={person}\r\n          persons={persons}\r\n          setPersons={setPersons}\r\n          setNotificationMessage={setNotificationMessage}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Person = props => {\r\n  const { person, persons, setPersons, setNotificationMessage } = props;\r\n  return (\r\n    <p>\r\n      {person.name} {person.number}\r\n      <RemoveButton\r\n        person={person}\r\n        persons={persons}\r\n        setPersons={setPersons}\r\n        setNotificationMessage={setNotificationMessage}\r\n      />\r\n    </p>\r\n  );\r\n};\r\n\r\nconst Filter = props => {\r\n  return (\r\n    <form>\r\n      <div>\r\n        rajaa näytettäviä{\" \"}\r\n        <input value={props.filter} onChange={props.handleFilterChange} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PersonForm = props => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        nimi: <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        numero :{\" \"}\r\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">lisää</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  const notificationStyle = {\r\n    color: \"green\",\r\n    background: \"lightgrey\",\r\n    fontSize: 20,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  };\r\n\r\n  return (\r\n    <div style={notificationStyle} className=\"error\">\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [newFilter, setNewFilter] = useState(\"\");\r\n  const [notificationMessage, setNotificationMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(initialPersons => {\r\n      setPersons(initialPersons);\r\n    });\r\n  }, []);\r\n\r\n  const handleNameChange = event => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilterChange = event => {\r\n    setNewFilter(event.target.value);\r\n  };\r\n\r\n  const updatePerson = nameObject => {\r\n    if (\r\n      window.confirm(\r\n        `${\r\n          nameObject.name\r\n        } on jo luettelossa, korvataanko vanha numero uudella?`\r\n      )\r\n    ) {\r\n      const person = persons.find(p => p.name === nameObject.name);\r\n      personService.update(person.id, nameObject).then(returnedPerson => {\r\n        setPersons(persons.map(p => (p.id !== person.id ? p : returnedPerson)));\r\n        setNotificationMessage(`Henkilön ${nameObject.name} numero päivitetty`);\r\n        setTimeout(() => {\r\n          setNotificationMessage(null);\r\n        }, 5000);\r\n      });\r\n    }\r\n  };\r\n\r\n  const addPerson = event => {\r\n    event.preventDefault();\r\n\r\n    const names = persons.map(person => person.name);\r\n    const nameObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    };\r\n\r\n    if (names.includes(newName)) {\r\n      updatePerson(nameObject);\r\n    } else {\r\n      personService.create(nameObject).then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson));\r\n        setNotificationMessage(`${newName} lisätty`);\r\n        setTimeout(() => {\r\n          setNotificationMessage(null);\r\n        }, 5000);\r\n      });\r\n    }\r\n\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Puhelinluettelo</h1>\r\n      <Notification message={notificationMessage} />\r\n      <Filter filter={newFilter} handleFilterChange={handleFilterChange} />\r\n\r\n      <h2>lisää uusi</h2>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        handleNameChange={handleNameChange}\r\n        newNumber={newNumber}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n\r\n      <h2>Numerot</h2>\r\n      <Persons\r\n        persons={persons}\r\n        filter={newFilter}\r\n        setPersons={setPersons}\r\n        setNotificationMessage={setNotificationMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}